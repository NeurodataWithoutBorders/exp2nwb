The code in this folder implements a new conversion approach, which is supposed to be applicable to experimental data generated by any lab:
                                                   EXP => NWB
The distinctive features of the new approach are:
- splitting the conversion project aimed at producing a single target NWB file 
  into a number of "elementary" tasks, which of which can be performed 
  independently. Each the task produces a "partial" NWB file, where only a 
  certain group or subset of nested groups of the target NWB file is populated 
  with datasets, and the rest of the groups are either missing or empty;
- each the "elementary" task is performed in two steps:
  1) (exp2dict): given experimental data, create a Python dictionary, where the 
                 keys are the full paths to datasets or attributes in the target 
                 NWB file, and the values are the contents of the datasets or 
                 attributes; and
  2) (dict2nwb): make use of the dictionary to produce a "partial" NWB file.
- the "partial" NWB files are stored in a project folder and named according to 
  the portion of the NWB file they produce. They can be easily reviewed using 
  the HDF viewer. For example, the "partial" NWB file where only datasets in the 
  folder with path .general/subject. are populated will be named 
  "general.subject.h5" (i.e. with the "slash" in the path replaced by "dot"). 
  The exact set of the partial files to be produced will depend on the type of 
  the data being converted. Depending on the data, some of the partial files 
  may or may not be produced.
- after all the required "partial" NWB files have been produced, the final, 
  full-size NWB file will be generated in one step via assembly of the partial 
  files.

The code comprises a Python script exp2nwb.py, together with utility library 
files:
- libexp2dict.py defines the functions that create a dictionary for each 
  "elementary" task. Each the function is named according to the "elementary" 
  task it will be used by, or to the partial file that will eventually be 
  produced. For example, the function to create a dictionary that will be used 
  to produce the partial file .general.subject.h5. is named .general_subject. (i.e. with .dot. replaced by .underscore.);
- libdict2nwb.py, likewise, defines the functions that will produce partial 
  files, given their respective dictionaries. These functions have the same 
  names as the corresponding functions in the library file libexp2dict.py; and
While the definitions of the functions in the library libexp2dict.py are highly 
data-dependent and will have to be re-implemented for each particular 
experimental data source, the functions in library libdict2nwb.py are supposed 
to be .universal., i.e. applicable to conversion of potentially any data. 
The library
- libh5.py is only used for the purpose of illustration. It defines the utility 
functions that can only be used with the data produced by Svoboda lab at Janelia 
Research Campus. These functions have been used by our current implementation 
of the library libexp2dict.py. 

How to use this code:
1) to produce a "partial" NWB file named <dot-separated string>.h5 and put it 
   in the project folder <project_name>, run the following command:
     exp2nwb.py <input data file(s)> -d <project_name> -p <dot-separated string>  
2) to assemble all the partial files in the folder <project_name> and produce 
   a single file <project_name>.nwb, run the command:
     exp2nwb.py <project_name>

